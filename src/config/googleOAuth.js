// Configura√ß√£o do Google OAuth2 para Gmail API
// As credenciais devem estar definidas nas vari√°veis de ambiente (arquivo .env)
// VITE_ √© necess√°rio para expor vari√°veis ao frontend no Vite

// Pega das vari√°veis de ambiente (sem fallback hardcoded para seguran√ßa)
const clientId = import.meta.env.VITE_GOOGLE_CLIENT_ID || "";
const clientSecret = import.meta.env.VITE_GOOGLE_CLIENT_SECRET || "";

// Debug: verifica se as vari√°veis est√£o sendo carregadas
if (typeof window !== 'undefined') {
  console.log('üîë Client ID carregado:', clientId ? '‚úÖ Sim' : '‚ùå N√£o');
  console.log('üîë Client Secret carregado:', clientSecret ? '‚úÖ Sim' : '‚ùå N√£o');
  if (!clientId || !clientSecret) {
    console.error('‚ùå ERRO: Vari√°veis de ambiente n√£o configuradas!');
    console.error('üìù Certifique-se de ter um arquivo .env na raiz do projeto com:');
    console.error('   VITE_GOOGLE_CLIENT_ID=seu_client_id');
    console.error('   VITE_GOOGLE_CLIENT_SECRET=seu_client_secret');
  }
}

export const GOOGLE_OAUTH_CONFIG = {
  clientId: clientId,
  clientSecret: clientSecret,
  redirectUri: typeof window !== 'undefined' 
    ? (window.location.origin === 'https://providersmanagement.vercel.app' 
        ? "https://providersmanagement.vercel.app"
        : window.location.origin)
    : "http://localhost:3000",
  scopes: [
    'https://www.googleapis.com/auth/gmail.send',
    'https://www.googleapis.com/auth/gmail.compose'
  ],
  discoveryDocs: ['https://www.googleapis.com/discovery/v1/apis/gmail/v1/rest']
};
